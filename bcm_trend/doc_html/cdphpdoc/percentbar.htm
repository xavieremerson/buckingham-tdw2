<HTML>
<HEAD>
<Title>Percentage Bar Chart</Title>
<link type='text/css' rel='Stylesheet' href="maxchartapi.css" />
</HEAD>
<body bgcolor="#FFFFFF" text="#000000" topmargin="0" leftmargin="0" rightmargin="0" marginwidth="0" marginheight="0">

<p class="heading0">ChartDirector Ver 5.0 (PHP Edition)</p>
<p class="heading1">Percentage Bar Chart</p>
<hr class="separator">
<div class="content">
<img src="images/percentbar.png">
<br><br>
This example demonstrates creating a percentage bar chart with a legend box. It also demonstrates gradient background color, rounded frame, soft drop shadow, and using <a href="cdml.htm">CDML</a> to include custom icons in the legend box.<br><br>
A percentage bar chart is like a stacked bar chart, except the bars are individually scaled so that they stacked up to 100.<br><br>
The key features demonstrated in this example are:<br><br>
<ul><li> The gradient background is achieved by using <a href="BaseChart.linearGradientColor.htm">BaseChart.linearGradientColor</a> to define the gradient color, then use <a href="BaseChart.setBackground.htm">BaseChart.setBackground</a> to set it as the chart background color.<br><br>
<li> The rounded frame is configured using <a href="BaseChart.setRoundedFrame.htm">BaseChart.setRoundedFrame</a>.<br><br>
<li> The soft drop shadow is configured using <a href="BaseChart.setDropShadow.htm">BaseChart.setDropShadow</a>.<br><br>
<li> The legend box is added using <a href="BaseChart.addLegend.htm">BaseChart.addLegend</a>. The legend key (the color box to the right of each legend entry) is set to 16 x 32 pixels using <a href="LegendBox.setKeySize.htm">LegendBox.setKeySize</a>, so as to match the size of the custom icons.<br><br>
<li> The ordering of the legend entries is reversed using <a href="Layer.setLegend.htm">Layer.setLegend</a>, so that the legend box shows the last data set name first. This is useful for a vertical legend box in a vertical stacked chart with purely positive data. In such case, the last data set will be on the top of the stacked bars. Reversing the ordering of the legend entries will make it visually consistent with the stacking order of the data set.<br><br>
<li> The percentage bar layer is added using <a href="XYChart.addBarLayer2.htm">XYChart.addBarLayer2</a> with the <a href="phpchartdir.Percentage.htm">Percentage</a> predefined constant.<br><br>
<li> Multiple data sets are added to the bar layer using <a href="Layer.addDataSet.htm">Layer.addDataSet</a>. <a href="cdml.htm">CDML</a> is used to include custom icons in the data set names.<br><br>
<li> Labels for the bar segments are added using <a href="Layer.setDataLabelStyle.htm">Layer.setDataLabelStyle</a>, with center alignment configured using <a href="TextBox.setAlignment.htm">TextBox.setAlignment</a>.<br><br>
<li> For web applications, we need to set the search path to load the icon images from the current script directory using <a href="BaseChart.setSearchPath.htm">BaseChart.setSearchPath</a>. It is because for some web servers (eg. IIS), the default current directory is not the script directory (eg. IIS uses the IIS executable directory), so the search path needs to be set explicitly.</ul>
Note that by default, the data label format is <b>{percent}%</b> (showing the percentage) for a percentage bar layer, as opposed to <b>{value}</b> (showing the data value) for other types of bar layer. The data label format can be modified using <a href="Layer.setDataLabelFormat.htm">Layer.setDataLabelFormat</a>.
</div>
<p class="heading1a">Source Code Listing</p>
<div class="content">
<b>[File: phpdemo/percentbar.php]</b>
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>&lt;?php
require_once("../lib/phpchartdir.php");

# The data for the bar chart
$data0 = array(100, 125, 245, 147, 67);
$data1 = array(85, 156, 179, 211, 123);
$data2 = array(97, 87, 56, 267, 157);

# The labels for the bar chart
$labels = array("Mon", "Tue", "Wed", "Thu", "Fri");

# Create a XYChart object of size 500 x 320 pixels. Use a vertical gradient color
# from pale blue (e8f0f8) to sky blue (aaccff) spanning half the chart height as
# background. Set border to blue (88aaee). Use rounded corners. Enable soft drop
# shadow.
$c = new XYChart(500, 320);
$c-&gt;setBackground($c-&gt;linearGradientColor(0, 0, 0, $c-&gt;getHeight() / 2, 0xe8f0f8,
    0xaaccff), 0x88aaee);
$c-&gt;setRoundedFrame();
$c-&gt;setDropShadow();

#Set directory for loading images to current script directory
#Need when running under Microsoft IIS
$c-&gt;setSearchPath(dirname(__FILE__));

# Add a title to the chart using 15 points Arial Italic. Set top/bottom margins to 15
# pixels.
$title = $c-&gt;addTitle("Weekly Product Sales", "ariali.ttf", 15);
$title-&gt;setMargin2(0, 0, 15, 15);

# Tentatively set the plotarea to 50 pixels from the left edge, and to just under the
# title. Set the width to 60% of the chart width, and the height to 50 pixels from
# the bottom edge. Use pale blue (e8f0f8) background, transparent border, and grey
# (aaaaaa) grid lines.
$c-&gt;setPlotArea(50, $title-&gt;getHeight(), $c-&gt;getWidth() * 6 / 10, $c-&gt;getHeight() -
    $title-&gt;getHeight() - 50, 0xe8f0f8, -1, Transparent, 0xaaaaaa);

# Add a legend box where the top-right corner is anchored at 10 pixels from the right
# edge, and just under the title. Use vertical layout and 8 points Arial font.
$legendBox = $c-&gt;addLegend($c-&gt;getWidth() - 10, $title-&gt;getHeight(), true,
    "arial.ttf", 8);
$legendBox-&gt;setAlignment(TopRight);

# Set the legend box background and border to transparent
$legendBox-&gt;setBackground(Transparent, Transparent);

# Set the legend box icon size to 16 x 32 pixels to match with custom icon size
$legendBox-&gt;setKeySize(16, 32);

# Set axes to transparent
$c-&gt;xAxis-&gt;setColors(Transparent);
$c-&gt;yAxis-&gt;setColors(Transparent);

# Set the labels on the x axis
$c-&gt;xAxis-&gt;setLabels($labels);

# Add a percentage bar layer
$layer = $c-&gt;addBarLayer2(Percentage);

# Add the three data sets to the bar layer, using icons images with labels as data
# set names
$layer-&gt;addDataSet($data0, 0x66aaee,
    "&lt;*block,valign=absmiddle*&gt;&lt;*img=service.png*&gt; Service&lt;*/*&gt;");
$layer-&gt;addDataSet($data1, 0xeebb22,
    "&lt;*block,valign=absmiddle*&gt;&lt;*img=software.png*&gt; Software&lt;*/*&gt;");
$layer-&gt;addDataSet($data2, 0xcc88ff,
    "&lt;*block,valign=absmiddle*&gt;&lt;*img=computer.png*&gt; Hardware&lt;*/*&gt;");

# Use soft lighting effect with light direction from top
$layer-&gt;setBorderColor(Transparent, softLighting(Top));

# Enable data label at the middle of the the bar
$textBoxObj = $layer-&gt;setDataLabelStyle();
$textBoxObj-&gt;setAlignment(Center);

# For a vertical stacked chart with positive data only, the last data set is always
# on top. However, in a vertical legend box, the last data set is at the bottom. This
# can be reversed by using the setLegend method.
$layer-&gt;setLegend(ReverseLegend);

# Adjust the plot area size, such that the bounding box (inclusive of axes) is 15
# pixels from the left edge, just below the title, 10 pixels to the right of the
# legend box, and 15 pixels from the bottom edge.
$layoutLegendObj = $c-&gt;layoutLegend();
$c-&gt;packPlotArea(15, $title-&gt;getHeight(), $layoutLegendObj-&gt;getLeftX() - 10,
    $c-&gt;getHeight() - 15);

# Output the chart
header("Content-type: image/png");
print($c-&gt;makeChart2(PNG));
?&gt;</pre></tr></td></table>
</div>
<br><hr class="separator"><div class="copyright">&copy; 2008 Advanced Software Engineering Limited. All rights reserved.</div>
</body>
</HTML>
