<HTML>
<HEAD>
<Title>Surface Wireframe</Title>
<link type='text/css' rel='Stylesheet' href="maxchartapi.css" />
</HEAD>
<body bgcolor="#FFFFFF" text="#000000" topmargin="0" leftmargin="0" rightmargin="0" marginwidth="0" marginheight="0">

<p class="heading0">ChartDirector Ver 5.0 (PHP Edition)</p>
<p class="heading1">Surface Wireframe</p>
<hr class="separator">
<div class="content">
<img src="images/surfacewireframe0.jpg">&nbsp;&nbsp;<img src="images/surfacewireframe1.jpg">&nbsp;&nbsp;<img src="images/surfacewireframe2.jpg">&nbsp;&nbsp;<img src="images/surfacewireframe3.jpg">&nbsp;&nbsp;<img src="images/surfacewireframe4.jpg">&nbsp;&nbsp;<img src="images/surfacewireframe5.jpg">
<br><br>
This example demonstrates the rectangular and triangular wireframes of a surface at different interpolation levels, configured using <a href="SurfaceChart.setShadingMode.htm">SurfaceChart.setShadingMode</a> and <a href="SurfaceChart.setInterpolation.htm">SurfaceChart.setInterpolation</a>.
</div>
<p class="heading1a">Source Code Listing</p>
<div class="content">
<b>[File: phpdemo/surfacewireframe.php]</b>
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>&lt;?php
require_once("../lib/phpchartdir.php");

# The x and y coordinates of the grid
$dataX = array(-2, -1, 0, 1, 2);
$dataY = array(-2, -1, 0, 1, 2);

# The values at the grid points. In this example, we will compute the values using
# the formula z = square_root(15 - x * x - y * y).
$dataZ = array_pad(array(), count($dataX) * count($dataY), 0);
for($yIndex = 0; $yIndex &lt; count($dataY); ++$yIndex) {
    $y = $dataY[$yIndex];
    for($xIndex = 0; $xIndex &lt; count($dataX); ++$xIndex) {
        $x = $dataX[$xIndex];
        $dataZ[$yIndex * count($dataX) + $xIndex] = sqrt(15 - $x * $x - $y * $y);
    }
}

# Create a SurfaceChart object of size 380 x 340 pixels, with white (ffffff)
# background and grey (888888) border.
$c = new SurfaceChart(380, 340, 0xffffff, 0x888888);

# Demonstrate various wireframes with and without interpolation
if ($_REQUEST["img"] == "0") {
    # Original data without interpolation
    $c-&gt;addTitle("5 x 5 Data Points\nStandard Shading", "arialbd.ttf", 12);
    $c-&gt;setContourColor(0x80ffffff);
} else if ($_REQUEST["img"] == "1") {
    # Original data, spline interpolated to 40 x 40 for smoothness
    $c-&gt;addTitle("5 x 5 Points - Spline Fitted to 40 x 40\nStandard Shading",
        "arialbd.ttf", 12);
    $c-&gt;setContourColor(0x80ffffff);
    $c-&gt;setInterpolation(40, 40);
} else if ($_REQUEST["img"] == "2") {
    # Rectangular wireframe of original data
    $c-&gt;addTitle("5 x 5 Data Points\nRectangular Wireframe");
    $c-&gt;setShadingMode(RectangularFrame);
} else if ($_REQUEST["img"] == "3") {
    # Rectangular wireframe of original data spline interpolated to 40 x 40
    $c-&gt;addTitle("5 x 5 Points - Spline Fitted to 40 x 40\nRectangular Wireframe");
    $c-&gt;setShadingMode(RectangularFrame);
    $c-&gt;setInterpolation(40, 40);
} else if ($_REQUEST["img"] == "4") {
    # Triangular wireframe of original data
    $c-&gt;addTitle("5 x 5 Data Points\nTriangular Wireframe");
    $c-&gt;setShadingMode(TriangularFrame);
} else {
    # Triangular wireframe of original data spline interpolated to 40 x 40
    $c-&gt;addTitle("5 x 5 Points - Spline Fitted to 40 x 40\nTriangular Wireframe");
    $c-&gt;setShadingMode(TriangularFrame);
    $c-&gt;setInterpolation(40, 40);
}

# Set the center of the plot region at (200, 170), and set width x depth x height to
# 200 x 200 x 150 pixels
$c-&gt;setPlotRegion(200, 170, 200, 200, 150);

# Set the plot region wall thichness to 5 pixels
$c-&gt;setWallThickness(5);

# Set the elevation and rotation angles to 20 and 30 degrees
$c-&gt;setViewAngle(20, 30);

# Set the data to use to plot the chart
$c-&gt;setData($dataX, $dataY, $dataZ);

# Output the chart
header("Content-type: image/jpeg");
print($c-&gt;makeChart2(JPG));
?&gt;</pre></tr></td></table>
</div>
<br><hr class="separator"><div class="copyright">&copy; 2008 Advanced Software Engineering Limited. All rights reserved.</div>
</body>
</HTML>
