<HTML>
<HEAD>
<Title>Bubble Chart</Title>
<link type='text/css' rel='Stylesheet' href="maxchartapi.css" />
</HEAD>
<body bgcolor="#FFFFFF" text="#000000" topmargin="0" leftmargin="0" rightmargin="0" marginwidth="0" marginheight="0">

<p class="heading0">ChartDirector Ver 5.0 (PHP Edition)</p>
<p class="heading1">Bubble Chart</p>
<hr class="separator">
<div class="content">
<img src="images/bubble.png">
<br><br>
This example demonstrates how to create a bubble chart.<br><br>
In ChartDirector, a bubble chart can be created as a scatter layer with circles as symbols using <a href="XYChart.addScatterLayer.htm">XYChart.addScatterLayer</a>. The sizes of the symbols are then controlled by another data series (z data) using <a href="LineLayer.setSymbolScale.htm">LineLayer.setSymbolScale</a>. This creates circles of different sizes.<br><br>
By default, ChartDirector handles z data using pixel units. That means a z value of 50 will result in a symbol size of 50 pixels. If your z data are too small or too large, you may re-scale them using <a href="ArrayMath.mul.htm">ArrayMath.mul</a> before passing them to <a href="LineLayer.setSymbolScale.htm">LineLayer.setSymbolScale</a>.<br><br>
ChartDirector also supports handling the z data using the same scale as the y (or x) axis by supplying additional arguments to <a href="LineLayer.setSymbolScale.htm">LineLayer.setSymbolScale</a>. This is useful if the symbol sizes reflect some features of the y (or x) data, such as the standard deviation or confidence of the y (or x) value.
</div>
<p class="heading1a">Source Code Listing</p>
<div class="content">
<b>[File: phpdemo/bubble.php]</b>
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>&lt;?php
require_once("../lib/phpchartdir.php");

# The XYZ points for the bubble chart
$dataX0 = array(150, 300, 1000, 1700);
$dataY0 = array(12, 60, 25, 65);
$dataZ0 = array(20, 50, 50, 85);

$dataX1 = array(500, 1000, 1300);
$dataY1 = array(35, 50, 75);
$dataZ1 = array(30, 55, 95);

# Create a XYChart object of size 450 x 420 pixels
$c = new XYChart(450, 420);

# Set the plotarea at (55, 65) and of size 350 x 300 pixels, with a light grey border
# (0xc0c0c0). Turn on both horizontal and vertical grid lines with light grey color
# (0xc0c0c0)
$c-&gt;setPlotArea(55, 65, 350, 300, -1, -1, 0xc0c0c0, 0xc0c0c0, -1);

# Add a legend box at (50, 30) (top of the chart) with horizontal layout. Use 12 pts
# Times Bold Italic font. Set the background and border color to Transparent.
$legendObj = $c-&gt;addLegend(50, 30, false, "timesbi.ttf", 12);
$legendObj-&gt;setBackground(Transparent);

# Add a title to the chart using 18 pts Times Bold Itatic font.
$c-&gt;addTitle("Product Comparison Chart", "timesbi.ttf", 18);

# Add a title to the y axis using 12 pts Arial Bold Italic font
$c-&gt;yAxis-&gt;setTitle("Capacity (tons)", "arialbi.ttf", 12);

# Add a title to the x axis using 12 pts Arial Bold Italic font
$c-&gt;xAxis-&gt;setTitle("Range (miles)", "arialbi.ttf", 12);

# Set the axes line width to 3 pixels
$c-&gt;xAxis-&gt;setWidth(3);
$c-&gt;yAxis-&gt;setWidth(3);

# Add (dataX0, dataY0) as a scatter layer with semi-transparent red (0x80ff3333)
# circle symbols, where the circle size is modulated by dataZ0. This creates a bubble
# effect.
$scatterLayerObj = $c-&gt;addScatterLayer($dataX0, $dataY0, "Technology AAA",
    CircleSymbol, 9, 0x80ff3333, 0x80ff3333);
$scatterLayerObj-&gt;setSymbolScale($dataZ0);

# Add (dataX1, dataY1) as a scatter layer with semi-transparent green (0x803333ff)
# circle symbols, where the circle size is modulated by dataZ1. This creates a bubble
# effect.
$scatterLayerObj = $c-&gt;addScatterLayer($dataX1, $dataY1, "Technology BBB",
    CircleSymbol, 9, 0x803333ff, 0x803333ff);
$scatterLayerObj-&gt;setSymbolScale($dataZ1);

# Output the chart
header("Content-type: image/png");
print($c-&gt;makeChart2(PNG));
?&gt;</pre></tr></td></table>
</div>
<br><hr class="separator"><div class="copyright">&copy; 2008 Advanced Software Engineering Limited. All rights reserved.</div>
</body>
</HTML>
