<HTML>
<HEAD>
<Title>Y-Axis Scaling</Title>
<link type='text/css' rel='Stylesheet' href='maxchartapi.css'/>
</HEAD>
<body bgcolor="#FFFFFF" text="#000000" topmargin="0" leftmargin="0" rightmargin="0" marginwidth="0" marginheight="0">

<p class="heading0">ChartDirector Ver 3.0 (PHP Edition)</p>
<p class="heading1">Y-Axis Scaling</p>
<hr class="separator">
<div class="content">
<img src="images/axisscale0.png">&nbsp;&nbsp;<img src="images/axisscale1.png">&nbsp;&nbsp;<img src="images/axisscale2.png">&nbsp;&nbsp;<img src="images/axisscale3.png">&nbsp;&nbsp;<img src="images/axisscale4.png">
<br><br>
This example illustrates how to control scaling of an axis.<br><br>
By default, ChartDirector will auto-scaled all axes. The <a href="Axis.setAutoScale.htm">Axis.setAutoScale</a> method controls the top extension, bottom extension and the zero affinity parameters that ChartDirector uses during auto-scaling. The first three charts demonstrates the effects of different top/bottom extensions. (Please refer to <a href="Axis.setAutoScale.htm">Axis.setAutoScale</a> on what these parameters mean.)<br><br>
The fourth chart demonstrates that one could exclude a segment on the ends of an axis from scaling using <a href="Axis.setMargin.htm">Axis.setMargin</a>.<br><br>
The fifth chart demonstrates using manual scaling instead of auto-scaling. A manual linear scale can be configured using <a href="Axis.setLinearScale.htm">Axis.setLinearScale</a> or <a href="Axis.setLinearScale2.htm">Axis.setLinearScale2</a>. ChartDirector also supports <a href="Axis.setLogScale.htm">Axis.setLogScale</a>, <a href="Axis.setLogScale2.htm">Axis.setLogScale2</a>, <a href="Axis.setDateScale.htm">Axis.setDateScale</a> and <a href="Axis.setDateScale2.htm">Axis.setDateScale2</a> for configuring manual log and date scales.
</div>
<p class="heading2">Source Code Listing</p>
<div class="content">
[File: phpdemo/axisscale.php]<br>
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc">
<xmp><?php
include("phpchartdir.php");

#The data for the chart
$data = array(5.5, 3.5, -3.7, 1.7, -1.4, 3.3);
$labels = array("Jan", "Feb", "Mar", "Apr", "May", "Jun");

#Create a XYChart object of size 200 x 180 pixels
$c = new XYChart(200, 180);

#Set the plot area at (30, 20) and of size 140 x 130 pixels
$c->setPlotArea(30, 20, 140, 130);

#Configure the axis as according to the input parameter
if ($HTTP_GET_VARS["img"] == "0") {
    $c->addTitle("No Axis Extension", "arial.ttf", 8);
} else if ($HTTP_GET_VARS["img"] == "1") {
    $c->addTitle("Top/Bottom Extensions = 0/0", "arial.ttf", 8);
    #Reserve 20% margin at top of plot area when auto-scaling
    $c->yAxis->setAutoScale(0, 0);
} else if ($HTTP_GET_VARS["img"] == "2") {
    $c->addTitle("Top/Bottom Extensions = 0.2/0.2", "arial.ttf", 8);
    #Reserve 20% margin at top and bottom of plot area when auto-scaling
    $c->yAxis->setAutoScale(0.2, 0.2);
} else if ($HTTP_GET_VARS["img"] == "3") {
    $c->addTitle("Axis Top Margin = 15", "arial.ttf", 8);
    #Reserve 15 pixels at top of plot area
    $c->yAxis->setMargin(15);
} else {
    $c->addTitle("Manual Scale -5 to 10", "arial.ttf", 8);
    #Set the y axis to scale from -5 to 10, with ticks every 5 units
    $c->yAxis->setLinearScale(-5, 10, 5);
}

#Set the labels on the x axis
$c->xAxis->setLabels($labels);

#Add a color bar layer using the given data. Use a 1 pixel 3D border for the
#bars.
$barLayer3Obj = $c->addBarLayer3($data);
$barLayer3Obj->setBorderColor(-1, 1);

#output the chart
header("Content-type: image/png");
print($c->makeChart2(PNG));
?></xmp>
</td></tr></table>
</div>
<br><hr class="separator"><div class="copyright">&copy; 2003 Advanced Software Engineering Limited. All rights reserved.</div>
</body>
</HTML>
